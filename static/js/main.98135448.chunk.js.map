{"version":3,"sources":["components/EtherInput.tsx","cards/TransactionBuilder.tsx","workers/vanity.worker.js","cards/FunctionSignature.tsx","workers/VanityControl.ts","cards/VanityAddress.tsx","App.tsx","serviceWorker.js","index.tsx","components/HexInput.tsx"],"names":["EtherInput","web3","Web3","state","unit","_this2","this","_this$props","props","label","value","onChange","formattedValue","utils","fromWei","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_11___default","type","e","wei","toWei","target","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_10___default","setState","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_9___default","defaultUnit","Component","PRIVATE_KEY_REGEX","TransactionBuilder","nonce","gasPrice","gasLimit","to","data","importExpanded","signerExpanded","privateKey","txToImport","importedSender","bufferToNumStr","val","hexToNumberString","ethereumUtils","bufferToHex","tx","EthereumTX","getSenderAddress","_this$state","toHex","test","getTxObj","sign","Buffer","from","serialize","toString","_this3","_this$state2","react__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_CardActions__WEBPACK_IMPORTED_MODULE_11___default","disableActionSpacing","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9___default","fullWidth","onClick","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_18___default","_material_ui_core_Collapse__WEBPACK_IMPORTED_MODULE_13___default","in","timeout","unmountOnExit","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_12___default","_components_HexInput__WEBPACK_IMPORTED_MODULE_16__","disabled","length","importTx","_this4","_this$state3","txObject","signed","error","getSigned","message","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_14___default","gutterBottom","variant","component","importPanel","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_17___default","_components_EtherInput__WEBPACK_IMPORTED_MODULE_15__","JSON","stringify","module","exports","Worker","__webpack_public_path__","FunctionSignature","fnInterface","signature","decodeErr","keccak256","substr","fetch","concat","response","json","count","results","text_signature","react_default","Card_default","CardContent_default","Typography_default","Grid_default","TextField_default","placeholder","container","item","xs","style","textAlign","Fab_default","encode","ArrowDownward_default","decode","ArrowUpward_default","href","inputProps","maxLength","VanityControl","params","Object","classCallCheck","worker","VanityWorker","listener","addEventListener","status","_this","Promise","resolve","reject","resultListener","removeListeners","result","errorListener","removeEventListener","postMessage","command","getResult","terminate","VanityAddress","search","isRunning","getSearchParams","onStatus","iterations","generateAddress","address","privkey","abort","HexInput","Button_default","stop","start","withStyles","app","margin","_ref","classes","className","spacing","md","FunctionSignature_FunctionSignature","VanityAddress_VanityAddress","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_Users_dmihal_keystone_occi_ethereum_toolkit_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_3___default","assign","InputProps","startAdornment","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_2___default","position","onKeyDown","key","keyCode","which","console","log","preventDefault"],"mappings":"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","file":"static/js/main.98135448.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\n\ninterface Props {\n  label: string,\n  defaultUnit: string,\n  value: string,\n  onChange?: (value: string) => any,\n}\n\ninterface State {\n  unit: string | null,\n}\n\nexport default class EtherInput extends Component <Props, State> {\n  web3 = new Web3();\n\n  state = { unit: null };\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (!state.unit) {\n      state.unit = props.defaultUnit;\n    }\n    return state;\n  }\n\n  render() {\n    const unit = this.state.unit || 'ether';\n    const { label, value, onChange } = this.props;\n    const formattedValue = this.web3.utils.fromWei(value, unit);\n\n    const onChangeWrapper = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (onChange) {\n        const wei = this.web3.utils.toWei(e.target.value, unit);\n        onChange(wei);\n      }\n    };\n    return (\n      <FormControl>\n        <InputLabel>{label}</InputLabel>\n        <TextField value={formattedValue} type=\"number\" onChange={onChangeWrapper} />\n        <Select value={unit} onChange={e => this.setState({ unit: e.target.value })}>\n          <MenuItem value=\"wei\">Wei</MenuItem>\n          <MenuItem value=\"kwei\">Kwei</MenuItem>\n          <MenuItem value=\"mwei\">Mwei</MenuItem>\n          <MenuItem value=\"gwei\">Gwei</MenuItem>\n          <MenuItem value=\"microether\">Microether</MenuItem>\n          <MenuItem value=\"milliether\">Milliether</MenuItem>\n          <MenuItem value=\"ether\">Ether</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport EthereumTX from 'ethereumjs-tx';\nimport ethereumUtils from 'ethereumjs-util';\nimport Web3 from 'web3';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport EtherInput from '../components/EtherInput';\nimport HexInput from '../components/HexInput';\nimport TextField from '@material-ui/core/TextField';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\ninterface Props {\n}\n\ninterface State {\n  nonce: string;\n  gasPrice: string,\n  gasLimit: string,\n  to: string,\n  value: string,\n  data: string,\n\n  importExpanded: boolean,\n  signerExpanded: boolean,\n\n  privateKey: string,\n  txToImport: string,\n  importedSender: string | null,\n}\n\nconst PRIVATE_KEY_REGEX = /[0-9a-fA-F]{64}/;\n\nexport default class TransactionBuilder extends Component <Props, State> {\n  state = {\n    nonce: '0',\n    gasPrice: '4000000000',\n    gasLimit: '50000',\n    to: '',\n    value: '0',\n    data: '',\n\n    importExpanded: false,\n    signerExpanded: false,\n\n    privateKey: '',\n    txToImport: '',\n    importedSender: null,\n  };\n\n  web3 = new Web3();\n\n  importTx() {\n    const bufferToNumStr = (val: Buffer) => this.web3.utils.hexToNumberString(ethereumUtils.bufferToHex(val));\n    const tx = new EthereumTX(this.state.txToImport);\n    this.setState({\n      nonce: bufferToNumStr(tx.nonce),\n      gasPrice: bufferToNumStr(tx.gasPrice),\n      gasLimit: bufferToNumStr(tx.gasLimit),\n      to: ethereumUtils.bufferToHex(tx.to),\n      value: bufferToNumStr(tx.value),\n      data: ethereumUtils.bufferToHex(tx.data),\n\n      importedSender: ethereumUtils.bufferToHex(tx.getSenderAddress()),\n    });\n  }\n\n  getTxObj() {\n    const { nonce, gasPrice, gasLimit, to, value, data, privateKey } = this.state;\n    return {\n      nonce: this.web3.utils.toHex(nonce),\n      gasPrice: this.web3.utils.toHex(gasPrice),\n      gasLimit: this.web3.utils.toHex(gasLimit),\n      to,\n      value: this.web3.utils.toHex(value),\n      data,\n    };\n  }\n\n  getSigned() {\n    if (PRIVATE_KEY_REGEX.test(this.state.privateKey)) {\n      const tx = new EthereumTX(this.getTxObj());\n      tx.sign(Buffer.from(this.state.privateKey, 'hex'));\n      const raw = '0x' + tx.serialize().toString('hex');\n      return raw;\n    }\n    return '';\n  }\n\n  importPanel() {\n    const { importExpanded, txToImport } = this.state;\n    return (\n      <Fragment>\n        <CardActions disableActionSpacing>\n          <Button fullWidth={true} onClick={(e) => this.setState({ importExpanded: !importExpanded })}>\n            <ExpandMoreIcon /> Import Raw Signed Transaction\n          </Button>\n        </CardActions>\n\n        <Collapse in={importExpanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <HexInput\n              label=\"Raw Transaction\"\n              value={txToImport}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ txToImport: e.target.value })}\n            />\n            <Button disabled={txToImport.length === 0} onClick={() => this.importTx()}>\n              Import\n            </Button>\n          </CardContent>\n        </Collapse>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {\n      nonce, gasPrice, gasLimit, to, value, data, signerExpanded, privateKey, importedSender\n    } = this.state;\n\n    const txObject = this.getTxObj();\n\n    let signed = '';\n    let error = null;\n    try {\n      signed = signerExpanded ? this.getSigned() : '';\n    } catch (e) {\n      error = e.message;\n    }\n\n    return (\n      <Card>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Transaction Builder & Signer\n          </Typography>\n\n          {this.importPanel()}\n\n          {importedSender && (\n            <Typography>Imported transaction signed by {importedSender}</Typography>\n          )}\n\n          <TextField\n            value={nonce}\n            type=\"number\"\n            label=\"Nonce\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ nonce: e.target.value })}\n          />\n          <EtherInput\n            label=\"Gas Price\"\n            defaultUnit=\"gwei\"\n            value={gasPrice}\n            onChange={(val: string) => this.setState({ gasPrice: val })}\n          />\n          <TextField\n            value={gasLimit}\n            type=\"number\"\n            label=\"Nonce\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ gasLimit: e.target.value })}\n          />\n          <TextField\n            value={to}\n            label=\"To\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ to: e.target.value })}\n          />\n          <EtherInput\n            label=\"Value\"\n            defaultUnit=\"ether\"\n            value={value}\n            onChange={(val: string) => this.setState({ value: val })}\n          />\n          <HexInput\n            label=\"Data\"\n            value={data}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ data: e.target.value })}\n          />\n\n          <Typography>{error}</Typography>\n          <pre>{JSON.stringify(txObject)}</pre>\n        </CardContent>\n\n        <CardActions disableActionSpacing>\n          <Button fullWidth={true} onClick={(e) => this.setState({ signerExpanded: !signerExpanded })}>\n            <ExpandMoreIcon /> Sign Transaction\n          </Button>\n        </CardActions>\n\n        <Collapse in={signerExpanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <HexInput\n              label=\"Private Key\"\n              value={privateKey}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ privateKey: e.target.value })}\n            />\n            <pre>{signed}</pre>\n          </CardContent>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"2efce8579883f2159ea2.worker.js\");\n};","import React, { Component } from 'react';\nimport ethereumUtils from 'ethereumjs-util';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\n\nconst FUNCTION_SIGNATURE_REGEX = /^\\W\\([\\W, ].\\)$/;\n\n\ninterface Props {\n}\n\ninterface State {\n  fnInterface: string,\n  signature: string,\n\n  decodeErr: string | null,\n}\n\ninterface ByteQueryResult {\n  text_signature: string,\n}\n\nexport default class FunctionSignature extends Component <Props, State> {\n  state = {\n    fnInterface: '',\n    signature: '',\n    decodeErr: null,\n  }\n\n  async encode() {\n    const { keccak256, bufferToHex } = ethereumUtils;\n    const signature = bufferToHex(keccak256(this.state.fnInterface)).substr(0, 10);\n    this.setState({ signature, decodeErr: null });\n  }\n\n  async decode() {\n    const response = await fetch(`https://www.4byte.directory/api/v1/signatures/?hex_signature=${this.state.signature}`);\n    const { count, results } = await response.json();\n    if (count === 0) {\n      this.setState({ decodeErr: 'Signature not found' });\n    } else {\n      this.setState({ fnInterface: results[0].text_signature, decodeErr: null });\n    }\n  }\n\n  render() {\n    const { fnInterface, signature, decodeErr } = this.state;\n    return (\n      <Card>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            EVM Function Signatures\n          </Typography>\n\n          <Grid>\n            <TextField\n              value={fnInterface}\n              fullWidth\n              placeholder=\"Function signature\"\n              onChange={(e) => this.setState({ fnInterface: e.target.value })}\n            />\n          </Grid>\n          <Grid container>\n            <Grid item xs={6}>\n              <div style={{ textAlign: 'center' }}>\n                <Fab variant=\"extended\" disabled={fnInterface.length < 3} onClick={() => this.encode()}>\n                  <ArrowDownward />\n                  Encode\n                </Fab>\n              </div>\n            </Grid>\n            <Grid item xs={6}>\n              <div style={{ textAlign: 'center' }}>\n                <Fab variant=\"extended\" disabled={signature.length < 8} onClick={() => this.decode()}>\n                  <ArrowUpward />\n                  Decode\n                </Fab>\n                <Typography>\n                  Uses <a href=\"https://www.4byte.directory/\" target=\"4byte\">4byte.directory</a>\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n          <Grid>\n            <TextField\n              value={signature}\n              fullWidth\n              placeholder=\"4-byte hex signature\"\n              inputProps={{ maxLength: 10 }}\n              onChange={(e) => this.setState({ signature: e.target.value })}\n            />\n            <Typography>{decodeErr}</Typography>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n","import VanityWorker, { WebpackWorker } from './vanity.worker';\nimport { SearchParams, StatusUpdate, AddressResult } from './vanity.types';\n\nexport type SearchParams = SearchParams;\n\nexport default class VanityControl {\n  worker: WebpackWorker;\n  params: SearchParams;\n\n  constructor(params: SearchParams) {\n    this.worker = new VanityWorker();\n    this.params = params;\n  }\n\n  onStatus(listener: (status: StatusUpdate) => any) {\n    this.worker.addEventListener('message', (e: MessageEvent) => {\n      if (e.data.type === 'status') {\n        listener(e.data.status as StatusUpdate);\n      }\n    });\n  }\n\n  getResult() {\n    return new Promise((resolve, reject) => {\n      const resultListener = (e: MessageEvent) => {\n        if (e.data.type === 'result') {\n          removeListeners();\n          resolve(e.data.result as AddressResult);\n        }\n      };\n      const errorListener = (e: ErrorEvent) => {\n        removeListeners();\n        reject(e);\n      };\n      const removeListeners = () => {\n        this.worker.removeEventListener('message', resultListener);\n        this.worker.removeEventListener('error', errorListener);\n      }\n      this.worker.addEventListener('message', resultListener);\n      this.worker.addEventListener('error', errorListener);\n    });\n  }\n\n  async generateAddress() {\n    this.worker.postMessage({ command: 'start', params: this.params });\n    const result = await this.getResult();\n    this.worker.terminate();\n    return result as AddressResult;\n  }\n\n  abort() {\n    this.worker.terminate();\n  }\n}","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport HexInput from '../components/HexInput';\nimport VanityControl, { SearchParams } from '../workers/VanityControl';\n\ninterface Props {\n}\n\ninterface State {\n  search: string,\n  status: string,\n  isRunning: boolean,\n}\n\nexport default class VanityAddress extends Component <Props, State> {\n  state = {\n    search: '123',\n    status: '',\n    isRunning: false,\n  }\n\n  worker: VanityControl | null = null;\n\n  getSearchParams() {\n    const { search } = this.state;\n    const searchParams: SearchParams = {\n      search,\n    };\n    return searchParams;\n  }\n\n  async start() {\n    this.setState({ isRunning: true });\n\n    this.worker = new VanityControl(this.getSearchParams());\n    this.worker.onStatus(status => this.setState({ status: `Running, generated ${status.iterations} addresses` }));\n\n    const result = await this.worker.generateAddress();\n    const status = `Success! Generated address 0x${result.address} after ${result.iterations}`\n      + ` attempts. Address generated with private key ${result.privkey}.`;\n    this.setState({ status, isRunning: false });\n  }\n\n  stop() {\n    if (this.worker) {\n      this.worker.abort();\n      this.worker = null;\n      this.setState({ isRunning: false, status: 'Stopped' });\n    }\n  }\n\n  render() {\n    const { status, search, isRunning } = this.state;\n    return (\n      <Card>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Vanity Address Generator\n          </Typography>\n          <HexInput\n            label=\"Begin address with:\"\n            value={search}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ search: e.target.value })}\n            disabled={isRunning}\n          />\n          <Button onClick={() => isRunning ? this.stop() : this.start()}>\n            {isRunning ? 'Stop' : 'Start'}\n          </Button>\n          <Typography>{status}</Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport FunctionSignature from './cards/FunctionSignature';\nimport TransactionBuilder from './cards/TransactionBuilder';\nimport VanityAddress from './cards/VanityAddress';\n\nconst styles = {\n  app: {\n    margin: '16px',\n  },\n};\n\nconst App = ({ classes }: { classes: any }) => (\n  <div className={classes.app}>\n    <Grid container spacing={16}>\n      <Grid item md={8}>\n        <TransactionBuilder />\n      </Grid>\n      <Grid item md={4}>\n        <FunctionSignature />\n      </Grid>\n      <Grid item md={4}>\n        <VanityAddress />\n      </Grid>\n    </Grid>\n  </div>\n);\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nconst HexInput = ({ ...props }) => (\n  <TextField\n    label=\"With normal TextField\"\n    InputProps={{\n      startAdornment: <InputAdornment position=\"start\">0x</InputAdornment>,\n    }}\n    inputProps={{\n      onKeyDown: (e) => {\n        const key = e.keyCode || e.which;\nconsole.log(key, e);\n        //back, delete tab, ctrl, win, alt, f5, paste, copy, cut, home, end\n        if(key == 8 || key == 46 || key == 9 || key == 17 || key == 91 || key == 18 || \n                key==116 || key == 89 || key == 67 || key == 88 || key == 35 || key == 36) {\n            return true;\n        }\n        // arrows\n        if(key >= 37 && key <= 40) {\n            return true;\n        }\n        // numbers key\n        if((key >= 48 && key <= 57) || (key >= 96 && key <= 105)) {\n            return true;\n        }\n        // a-f\n        if(key >= 65 && key <= 70) {\n            return true;\n        }\n        e.preventDefault();\n      }\n    }}\n    {...props}\n  />\n);\n\nexport default HexInput;\n"],"sourceRoot":""}